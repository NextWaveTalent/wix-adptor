import { ServicePluginDefinition } from '@wix/sdk-types';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
export const provideHandlers = ServicePluginDefinition('EXTERNAL_DATABASE_PROVIDER', [
    {
        name: 'queryDataItems',
        primaryHttpMappingPath: '/v3/items/query',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'countDataItems',
        primaryHttpMappingPath: '/v3/items/count',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'aggregateDataItems',
        primaryHttpMappingPath: '/v3/items/aggregate',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'queryDistinctValues',
        primaryHttpMappingPath: '/v3/items/query-distinct-values',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'insertDataItems',
        primaryHttpMappingPath: '/v3/items/insert',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'updateDataItems',
        primaryHttpMappingPath: '/v3/items/update',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'removeDataItems',
        primaryHttpMappingPath: '/v3/items/remove',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'truncateDataItems',
        primaryHttpMappingPath: '/v3/items/truncate',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'queryReferencedDataItems',
        primaryHttpMappingPath: '/v3/items/query-referenced',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'insertDataItemReferences',
        primaryHttpMappingPath: '/v3/items/insert-references',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'removeDataItemReferences',
        primaryHttpMappingPath: '/v3/items/remove-references',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'listCollections',
        primaryHttpMappingPath: '/v3/collections/get',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'createCollection',
        primaryHttpMappingPath: '/v3/collections/create',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'updateCollection',
        primaryHttpMappingPath: '/v3/collections/update',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'deleteCollection',
        primaryHttpMappingPath: '/v3/collections/delete',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
    {
        name: 'getCapabilities',
        primaryHttpMappingPath: '/v3/capabilities/get',
        transformations: {
            toREST: (payload) => {
                const toRestResponse = payload;
                return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
            },
            fromREST: (payload) => {
                const fromRestRequest = payload;
                return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
            },
        },
    },
]);
//# sourceMappingURL=data-externaldatabasespi-v3-main-entity.public.js.map