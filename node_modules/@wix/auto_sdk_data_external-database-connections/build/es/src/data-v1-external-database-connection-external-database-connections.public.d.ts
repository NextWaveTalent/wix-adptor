import { HttpClient } from '@wix/sdk-types';
import { ConnectionTypeWithLiterals, ExternalDatabaseConnection, ListExternalDatabaseConnectionsOptions, ListExternalDatabaseConnectionsResponse, UpdateExternalDatabaseConnection } from './data-v1-external-database-connection-external-database-connections.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function getExternalDatabaseConnection(httpClient: HttpClient): GetExternalDatabaseConnectionSignature;
interface GetExternalDatabaseConnectionSignature {
    /**
     * Retrieves the specified external database connection.
     * @param - Name of the external database connection to retrieve.
     * @returns Details of the retrieved external database connection.
     */
    (name: string): Promise<ExternalDatabaseConnection>;
}
export declare function listExternalDatabaseConnections(httpClient: HttpClient): ListExternalDatabaseConnectionsSignature;
interface ListExternalDatabaseConnectionsSignature {
    /**
     * Lists all of the site's external database connections of all adaptor types.
     */
    (options?: ListExternalDatabaseConnectionsOptions | undefined): Promise<ListExternalDatabaseConnectionsResponse>;
}
export declare function createExternalDatabaseConnection(httpClient: HttpClient): CreateExternalDatabaseConnectionSignature;
interface CreateExternalDatabaseConnectionSignature {
    /**
     * Creates a new external database connection.
     *
     * Before you can establish a connection between a site and an external database, you must prepare an external database adaptor.
     * @param - External database connection details.
     * @param - Connection type. The connection type specifies the type of adaptor by which the external collection is integrated with the site.
     * @param - Options for creating an external database connection.
     * @returns Details of the created external database connection.
     */
    (externalDatabaseConnection: ExternalDatabaseConnection, connectionType: ConnectionTypeWithLiterals): Promise<ExternalDatabaseConnection>;
}
export declare function updateExternalDatabaseConnection(httpClient: HttpClient): UpdateExternalDatabaseConnectionSignature;
interface UpdateExternalDatabaseConnectionSignature {
    /**
     * Updates an external database connection.
     *
     * > **Note:** After an external database connection is updated, it only contains the values provided in the request. All previous values are lost.
     * @param - Name of the external database connection.
     *
     * An external database connection can connect to one or more external data collections or tables. These appear as `connectionName/dataCollectionId`.
     * @param - Options for updating an external database connection.
     * @param - Updated external database connection details. The existing connection is replaced with this version.
     * @returns Details of the updated external database connection.
     */
    (name: string, externalDatabaseConnection: UpdateExternalDatabaseConnection): Promise<ExternalDatabaseConnection>;
}
export declare function deleteExternalDatabaseConnection(httpClient: HttpClient): DeleteExternalDatabaseConnectionSignature;
interface DeleteExternalDatabaseConnectionSignature {
    /**
     * Deletes an external database connection.
     *
     * > **Note:** Once an external database connection is deleted, it can't be restored. To reconnect the database, create a new external database connection.
     * @param - Name of the external database connection to delete.
     */
    (name: string): Promise<void>;
}
export { ActionEvent, Capabilities, CauseOfFailure, CollectionsFound, ConnectionStatus, ConnectionType, CreateExternalDatabaseConnectionRequest, CreateExternalDatabaseConnectionResponse, DeleteExternalDatabaseConnectionRequest, DeleteExternalDatabaseConnectionResponse, DomainEvent, DomainEventBodyOneOf, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, ExternalDatabaseConnection, FieldType, GetExternalDatabaseConnectionRequest, GetExternalDatabaseConnectionResponse, IdentificationData, IdentificationDataIdOneOf, ListExternalDatabaseConnectionsOptions, ListExternalDatabaseConnectionsRequest, ListExternalDatabaseConnectionsResponse, MessageEnvelope, Paging, PagingMetadata, ProtocolVersion, RestoreInfo, UpdateExternalDatabaseConnection, UpdateExternalDatabaseConnectionRequest, UpdateExternalDatabaseConnectionResponse, WebhookIdentityType, } from './data-v1-external-database-connection-external-database-connections.universal.js';
