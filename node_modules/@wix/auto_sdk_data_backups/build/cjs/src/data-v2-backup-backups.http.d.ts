import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Creates an on-demand backup of live content in a site's collections.
 *
 *
 * By default, all of the site's collections are included in the backup. For a partial backup, specify which collections to include in the `backup.collections` parameter.
 *
 * The process of creating a backup takes time.
 * You can check whether a backup has completed successfully with List Backups.
 *
 * You can store up to 3 on-demand backups for each site.
 * If 3 on-demand backups already exist, the oldest existing on-demand backup for the site is deleted when a new one is created. Automated backups are not affected.
 */
export declare function createBackup(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of all backups for a site.
 *
 * Results are sorted by requested date, with the newest first.
 *
 * You can use this method to check whether a backup initiated with Create Backup has been completed successfully.
 */
export declare function listBackups(payload: object): RequestOptionsFactory<any>;
/**
 * Restores all data from a backup.
 *
 * The process of restoring data from a backup takes time.
 * You can check whether your restoration has completed successfully with List Restorations.
 */
export declare function restoreBackup(payload: object): RequestOptionsFactory<any>;
/**
 * Restores specific collections from a backup.
 *
 * The process of restoring data from a backup takes time.
 * You can check whether your restoration has completed successfully with List Restorations.
 */
export declare function restorePartialBackup(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of all data restorations from backups.
 *
 * Results are sorted by requested date, with the newest first.
 *
 * You can use this method to check whether a restoration initiated with Restore Backup has been completed successfully.
 */
export declare function listRestorations(payload: object): RequestOptionsFactory<any>;
/**
 * Deletes a backup.
 *
 * The process of deleting a backup takes time.
 * You can check whether a backup has been deleted successfully with List Backups.
 */
export declare function deleteBackup(payload: object): RequestOptionsFactory<any>;
