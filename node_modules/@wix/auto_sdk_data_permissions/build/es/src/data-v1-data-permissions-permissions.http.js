import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveWixCloudPermissionsV1DataPermissionsServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/_api/cloud-data/v1/permissions',
                destPath: '/v1/permissions',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/cloud-data/v1/permissions',
                destPath: '/v1/permissions',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/cloud-data/v1/permissions',
                destPath: '/v1/permissions',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/cloud-data/v1/permissions',
                destPath: '/v1/permissions',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_data_permissions';
/** Returns data permissions for a data collection */
export function getPermissions(payload) {
    function __getPermissions({ host }) {
        const metadata = {
            entityFqdn: 'wix.data.v1.data_permissions',
            method: 'GET',
            methodFqn: 'wix.cloud.permissions.v1.DataPermissionsService.GetPermissions',
            packageName: PACKAGE_NAME,
            url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
                protoPath: '/v1/permissions',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __getPermissions;
}
/**
 * Updates data permissions for a data collection
 *
 * NOTE that special permissions are not updated using this API, use dedicated methods for it.
 */
export function updatePermissions(payload) {
    function __updatePermissions({ host }) {
        const metadata = {
            entityFqdn: 'wix.data.v1.data_permissions',
            method: 'POST',
            methodFqn: 'wix.cloud.permissions.v1.DataPermissionsService.UpdatePermissions',
            packageName: PACKAGE_NAME,
            url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
                protoPath: '/v1/permissions',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __updatePermissions;
}
/**
 * Adds special data permissions for particular user/group
 * Errors:
 * - `ALREADY_EXISTS` in case if special permission for same subject already exists
 */
export function addSpecialPermissions(payload) {
    function __addSpecialPermissions({ host }) {
        const metadata = {
            entityFqdn: 'wix.data.v1.data_permissions',
            method: 'POST',
            methodFqn: 'wix.cloud.permissions.v1.DataPermissionsService.AddSpecialPermissions',
            packageName: PACKAGE_NAME,
            url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
                protoPath: '/v1/permissions/special',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __addSpecialPermissions;
}
/**
 * Updates special data permissions for particular user/group.
 * Any omitted permissions will be set to UNSPECIFIED.
 */
export function updateSpecialPermissions(payload) {
    function __updateSpecialPermissions({ host }) {
        const metadata = {
            entityFqdn: 'wix.data.v1.data_permissions',
            method: 'POST',
            methodFqn: 'wix.cloud.permissions.v1.DataPermissionsService.UpdateSpecialPermissions',
            packageName: PACKAGE_NAME,
            url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
                protoPath: '/v1/permissions/special/{specialPermissions.id}',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __updateSpecialPermissions;
}
/** Deletes special data permissions for particular user/group */
export function removeSpecialPermissions(payload) {
    function __removeSpecialPermissions({ host }) {
        const metadata = {
            entityFqdn: 'wix.data.v1.data_permissions',
            method: 'DELETE',
            methodFqn: 'wix.cloud.permissions.v1.DataPermissionsService.RemoveSpecialPermissions',
            packageName: PACKAGE_NAME,
            url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
                protoPath: '/v1/permissions/special/{specialPermissionsId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __removeSpecialPermissions;
}
/** Returns current user permissions for given data collection */
export function getMyPermissions(payload) {
    function __getMyPermissions({ host }) {
        const metadata = {
            entityFqdn: 'wix.data.v1.data_permissions',
            method: 'GET',
            methodFqn: 'wix.cloud.permissions.v1.DataPermissionsService.GetMyPermissions',
            packageName: PACKAGE_NAME,
            url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
                protoPath: '/v1/permissions/current',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __getMyPermissions;
}
//# sourceMappingURL=data-v1-data-permissions-permissions.http.js.map